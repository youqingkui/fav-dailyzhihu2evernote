// Generated by CoffeeScript 1.10.0
(function() {
  var CHECK, CheckDaily, PushDaily, ZhihuDaily, app, async, compress, express, morgan, noteStore, tx;

  express = require('express');

  async = require('async');

  morgan = require('morgan');

  compress = require('compression');

  PushDaily = require('./lib/pushDaily');

  ZhihuDaily = require('./models/zhihu_daily');

  tx = require('./lib/txErr');

  noteStore = require('./lib/noteStore');

  CheckDaily = require('./lib/checkDaily');

  app = express();

  morgan.token('date', function() {
    return new Date().toString();
  });

  app.use(morgan('combined'));

  CHECK = true;

  app.get('/', function(req, res) {
    return res.send('Hello World');
  });

  app.get('/do_task', function(req, res) {
    if (CHECK) {
      res.send('CHECK TRUE');
      CHECK = false;
      return async.waterfall([
        function(cb) {
          var check;
          check = new CheckDaily();
          return check.doTask(cb);
        }, function(cb) {
          return ZhihuDaily.where({
            status: 0
          }).orderBy('id DESC').find(function(err, rows) {
            if (err) {
              return txErr(op.url, {
                err: err,
                fun: 'getList-find'
              });
            }
            return cb(null, rows);
          });
        }, function(tasks, cb) {
          return async.eachSeries(tasks, function(item, callback) {
            var p;
            p = new PushDaily(noteStore, '735b3e76-e7f5-462c-84d0-bb1109bcd7dd', item.url, item.href, item.title);
            return p.pushNote(callback);
          }, function() {
            CHECK = true;
            return console.info("all do");
          });
        }
      ]);
    } else {
      return res.send('CHECK FALSE');
    }
  });

  app.listen(3000);

}).call(this);

//# sourceMappingURL=server.js.map
