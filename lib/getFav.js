// Generated by CoffeeScript 1.8.0
(function() {
  var Evernote, GetFav, Task, async, cheerio, crypto, makeNote, request, txErr;

  request = require('request');

  async = require('async');

  txErr = require('./txErr');

  cheerio = require('cheerio');

  Evernote = require('evernote').Evernote;

  crypto = require('crypto');

  makeNote = require('./createNote');

  Task = require('../models/tasks');

  GetFav = (function() {
    function GetFav(token) {
      this.headers = {
        'Authorization': token
      };
      this.url = 'http://news-at.zhihu.com/api/4/favorites';
    }

    GetFav.prototype.getList = function() {
      var op, self;
      self = this;
      op = {
        url: self.url,
        headers: self.headers
      };
      return async.waterfall([
        function(cb) {
          return request.get(op, function(err, res, body) {
            var data;
            if (err) {
              return txErr(op.url, {
                err: err,
                fun: 'getList'
              });
            }
            data = JSON.parse(body);
            console.log("#####################################");
            console.log("find length ==> ", data.stories.length);
            console.log("#####################################");
            return cb(null, data);
          });
        }, function(data, cb) {
          return async.eachSeries(data.stories, function(item, callback) {
            return self.saveTask(item.id, item.title, function(err) {
              if (err) {
                return console.log(err);
              }
              return callback();
            });
          }, function() {
            return cb();
          });
        }
      ]);
    };

    GetFav.prototype.saveTask = function(id, title, cb) {
      return async.series([
        function(callback) {
          return Task.findOne({
            id: id
          }, function(err, row) {
            if (err) {
              return txErr("", 5, {
                err: err,
                fun: 'saveTask-find'
              }, cb);
            }
            if (!row) {
              return callback();
            } else {
              console.log("" + id + " => " + title + " already exits");
              return cb();
            }
          });
        }, function(callback) {
          var newTask;
          newTask = new Task();
          newTask.id = id;
          newTask.url = 'http://daily.zhihu.com/story/' + id;
          newTask.title = title;
          return newTask.save(function(err, row) {
            if (err) {
              return txErr("", 5, {
                err: err,
                fun: 'saveTask-save'
              }, cb);
            }
            console.log("" + id + " => " + title + " add task db");
            return cb();
          });
        }
      ]);
    };

    return GetFav;

  })();

  module.exports = GetFav;

}).call(this);

//# sourceMappingURL=getFav.js.map
