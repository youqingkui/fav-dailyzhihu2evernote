// Generated by CoffeeScript 1.8.0
(function() {
  var CheckDaily, Daily, async, cheerio, d, noteStore, request, tx;

  request = require('request');

  async = require('async');

  tx = require('./txErr');

  Daily = require('../models/daily');

  cheerio = require('cheerio');

  noteStore = require('../lib/noteStore');

  CheckDaily = (function() {
    function CheckDaily() {
      this.url = "http://daily.zhihu.com/";
      this.dailyArr = [];
    }

    CheckDaily.prototype.doTask = function(cb) {
      var _this;
      _this = this;
      return async.waterfall([
        function(callback) {
          return _this.getContent(callback);
        }, function() {
          return _this.checkAdd(cb);
        }
      ]);
    };

    CheckDaily.prototype.getContent = function(cb) {
      var op, _this;
      _this = this;
      op = _this.reqOp(_this.url);
      return request.get(op, function(err, res, body) {
        var $, $dailyRow;
        if (err) {
          return tx({
            err: err,
            url: _this.url
          });
        }
        $ = cheerio.load(body);
        $dailyRow = $(".main-content-wrap .link-button");
        if ($dailyRow.length === 0) {
          return tx({
            err: "no $dailyRow length",
            url: _this.url,
            fun: 'getContent',
            body: body
          });
        }
        return async.eachSeries($dailyRow, function(row, callback) {
          var href, title, tmp;
          href = $(row).attr("href");
          title = $(row).find(".title").text();
          if (!href || !title) {
            tx({
              err: "not find title, href",
              fun: 'checkAdd',
              row: row
            });
            return callback();
          }
          tmp = {};
          tmp.href = href;
          tmp.title = title;
          _this.dailyArr.push(tmp);
          return callback();
        }, function() {
          return cb();
        });
      });
    };

    CheckDaily.prototype.checkAdd = function(cb) {
      var _this;
      _this = this;
      return async.eachSeries(_this.dailyArr, function(row, callback) {
        return _this.addRow(row.href, row.title, callback);
      }, function() {
        return cb();
      });
    };

    CheckDaily.prototype.addRow = function(href, title, cb) {
      return async.series([
        function(callback) {
          return Daily.findOne({
            href: href
          }, function(err, row) {
            if (err) {
              tx({
                err: err,
                fun: 'addRow',
                href: href,
                title: title
              });
              return cb();
            }
            if (row) {
              console.log("find same ==> " + href + ", " + title + ", " + row.title);
              return cb();
            } else {
              return callback();
            }
          });
        }, function(callback) {
          var daily;
          daily = new Daily();
          daily.href = href;
          daily.title = title;
          daily.url = "http://daily.zhihu.com" + href;
          return daily.save(function(err, row) {
            if (err) {
              tx({
                err: err,
                fun: 'addDaily',
                href: href,
                title: title
              });
              return cb();
            }
            console.log("add ok " + row.title + ", " + row.url);
            return cb();
          });
        }
      ]);
    };

    CheckDaily.prototype.reqOp = function(getUrl) {
      var options;
      options = {
        url: getUrl,
        headers: {
          'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36'
        }
      };
      return options;
    };

    return CheckDaily;

  })();

  d = new CheckDaily();

  d.doTask(function() {});

}).call(this);

//# sourceMappingURL=checkDaily.js.map
